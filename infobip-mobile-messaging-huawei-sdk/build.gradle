buildscript {
    repositories {
        google()
        mavenCentral()
        // huawei maven
        maven {url 'https://plugins.gradle.org/m2/'}
        maven { url 'https://developer.huawei.com/repo/' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$mm_gradlePluginVersion"
        classpath 'com.huawei.agconnect:agcp:1.6.0.300'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.huawei.agconnect'
apply plugin: 'maven-publish'
apply plugin: 'idea'

android {
    compileSdkVersion mm_compileSdkVersion
    buildToolsVersion mm_buildToolsVersion

    defaultConfig {
        minSdkVersion mm_minSdkVersion
        targetSdkVersion mm_targetSdkVersion
        versionCode 1
        versionName project.version

        // since AGP 4.1 "VERSION_NAME" is not included anymore to BuildConfig
        // https://issuetracker.google.com/issues/154275579
        buildConfigField "String", "VERSION_NAME", "\"$versionName\""
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles 'proguard-rules.pro'
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api "com.infobip:infobip-mobile-messaging-api-java:${mm_androidSdkVersion}"
    api "com.infobip:infobip-mobile-messaging-android-resources:${mm_androidSdkVersion}@aar"
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.appcompat:appcompat:1.3.1'

    // push kit
    implementation 'com.huawei.hms:push:6.3.0.302'

    androidTestImplementation project(':infobip-mobile-messaging-huawei-test')
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "junit:junit:4.12"
    androidTestImplementation "org.mockito:mockito-core:1.10.19"
    androidTestImplementation 'com.nanohttpd:nanohttpd:2.1.0'
    androidTestImplementation('org.skyscreamer:jsonassert:1.5.0') {
        exclude group: "org.json", module: "json"
    }

    testImplementation project(':infobip-mobile-messaging-huawei-test')
    testImplementation "junit:junit:4.12"

    implementation('com.google.code.gson:gson:2.9.0')
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def jar = project.tasks.create(name: "jar${name.capitalize()}", type: Jar) {
        Task javaCompileTask
        if (variant.hasProperty('javaCompileProvider')) {
            // Android 3.3.0+
            javaCompileTask = variant.javaCompileProvider.get()
        } else {
            javaCompileTask = variant.javaCompile
        }

        dependsOn javaCompileTask
        from javaCompileTask.destinationDir

        manifest {
            attributes(
                    "Bundle-Name": 'parse-android',
                    "Bundle-Version": project.version
            )
        }

        exclude '**/R.class'
        exclude '**/R\$*.class'
        exclude '**/Manifest.class'
        exclude '**/Manifest\$*.class'
        exclude '**/BuildConfig.class'
    }

    artifacts {
        archives jar
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

ext {
    PUBLISH_ARTIFACT_ID = 'infobip-mobile-messaging-huawei-sdk'
}
apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"
apply from: "${rootProject.projectDir}/jacoco.gradle"