buildscript {
    repositories {
        jcenter()
        google()
        maven { url 'http://developer.huawei.com/repo/' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:2.1'
        classpath 'com.huawei.agconnect:agcp:1.2.1.301'
    }
}

apply plugin: 'com.android.library'
apply plugin: 'com.huawei.agconnect'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'idea'

android {
    compileSdkVersion mm_compileSdkVersion
    buildToolsVersion mm_buildToolsVersion

    defaultConfig {
        minSdkVersion mm_minSdkVersion
        targetSdkVersion mm_targetSdkVersion
        versionCode 1
        versionName project.version
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'proguard-rules.pro'
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    api 'com.infobip:infobip-mobile-messaging-api-java:5.2.1'
    api 'com.infobip:infobip-mobile-messaging-android-resources:5.2.1@aar'
    api "com.android.support:support-v4:${mm_supportLibrariesVersion}"
    api "com.android.support:appcompat-v7:${mm_supportLibrariesVersion}"

    // push kit
    implementation 'com.huawei.hms:push:5.0.0.300'

    androidTestImplementation project(':infobip-mobile-messaging-huawei-test')
    androidTestImplementation "com.android.support.test:runner:1.0.2"
    androidTestImplementation "junit:junit:4.12"
    androidTestImplementation "org.mockito:mockito-core:1.10.19"
    androidTestImplementation 'com.nanohttpd:nanohttpd:2.1.0'
    androidTestImplementation('org.skyscreamer:jsonassert:1.5.0') {
        exclude group: "org.json", module: "json"
    }

    testImplementation project(':infobip-mobile-messaging-huawei-test')
    testImplementation "junit:junit:4.12"
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def jar = project.tasks.create(name: "jar${name.capitalize()}", type: Jar) {
        Task javaCompileTask
        if (variant.hasProperty('javaCompileProvider')) {
            // Android 3.3.0+
            javaCompileTask = variant.javaCompileProvider.get()
        } else {
            javaCompileTask = variant.javaCompile
        }

        dependsOn javaCompileTask
        from javaCompileTask.destinationDir

        manifest {
            attributes(
                    "Bundle-Name": 'parse-android',
                    "Bundle-Version": project.version
            )
        }

        exclude '**/R.class'
        exclude '**/R\$*.class'
        exclude '**/Manifest.class'
        exclude '**/Manifest\$*.class'
        exclude '**/BuildConfig.class'
    }

    artifacts {
        archives jar
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

task javadoc(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

task modifyPomBeforeUpload {
    doLast {
        def pom = "${project.buildDir}/poms/pom-default.xml"
        if (!file(pom).exists()) { install }
        def project = new XmlParser().parse(pom)
        //noinspection UnnecessaryQualifiedReference
        groovy.xml.XmlUtil.serialize(project, new FileWriter(pom))
    }
}

// Remove this when Gradle bug is fixed.
// https://github.com/gradle/gradle/issues/3170
modifyPomBeforeUpload.dependsOn(install)

ext {
    PUBLISH_ARTIFACT_ID = 'infobip-mobile-messaging-huawei-sdk'
}
apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"

publish.dependsOn(modifyPomBeforeUpload)