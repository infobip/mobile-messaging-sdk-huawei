plugins {
    id 'com.android.library'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
}

android {
    publishing {
        multipleVariants {
            allVariants()
            withJavadocJar()
            withSourcesJar()
        }
    }
    namespace = "org.infobip.mobile.messaging.chat"
    buildToolsVersion = mm_buildToolsVersion
    compileSdk = mm_compileSdkVersion

    defaultConfig {
        minSdkVersion mm_minSdkVersion
        targetSdkVersion mm_targetSdkVersion

        // since AGP 4.1 "VERSION_NAME" is not included anymore to BuildConfig
        // https://issuetracker.google.com/issues/154275579
        buildConfigField "String", "VERSION_NAME", "\"$versionName\""
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        consumerProguardFiles 'proguard-rules.pro'
        vectorDrawables.useSupportLibrary = true
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    buildTypes {
        debug {
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
            //needed for androidTests
            multiDexEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    lint {
        abortOnError false
    }

    packagingOptions {
        resources.excludes.add("META-INF/*")
    }
}

dependencies {
    implementation project(':infobip-mobile-messaging-huawei-sdk')
    api ("com.infobip:infobip-mobile-messaging-android-resources:${mm_androidSdkVersion}@aar")
    implementation "com.infobip:infobip-mobile-messaging-api-java:${mm_androidSdkVersion}"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$mm_kotlinVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$mm_coroutinesVersion"

    implementation "androidx.core:core-ktx:$mm_coreKtxVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$mm_lifecycleVersion"
    implementation "androidx.constraintlayout:constraintlayout:$mm_constraintLayoutVersion"
    implementation "androidx.appcompat:appcompat:$mm_appCompatVersion"
    implementation 'androidx.exifinterface:exifinterface:1.4.1'
    implementation "com.google.android.material:material:$mm_materialVersion"

    androidTestImplementation "androidx.test:runner:$mm_androidTestRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit:$mm_androidXjUnitVersion"
    androidTestImplementation "junit:junit:$mm_jUnitVersion"
    androidTestImplementation "io.mockk:mockk-android:1.13.11"
    androidTestImplementation 'com.nanohttpd:nanohttpd:2.1.0'
    androidTestImplementation 'com.android.support:multidex:2.0.1'

    testImplementation project(":infobip-mobile-messaging-huawei-test")
    testImplementation "junit:junit:$mm_jUnitVersion"
    testImplementation "io.mockk:mockk:1.13.9"
    testImplementation "org.assertj:assertj-core:3.26.0"

}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def jar = project.tasks.create(name: "jar${name.capitalize()}", type: Jar) {
        Task javaCompileTask
        if (variant.hasProperty('javaCompileProvider')) {
            // Android 3.3.0+
            javaCompileTask = variant.javaCompileProvider.get()
        } else {
            javaCompileTask = variant.javaCompile
        }

        dependsOn javaCompileTask
        from javaCompileTask.destinationDirectory

        manifest {
            attributes(
                    "Bundle-Name": 'parse-android',
                    "Bundle-Version": project.version
            )
        }

        exclude '**/R.class'
        exclude '**/R\$*.class'
        exclude '**/Manifest.class'
        exclude '**/Manifest\$*.class'
        exclude '**/BuildConfig.class'
    }

    artifacts {
        archives jar
    }
}

ext {
    PUBLISH_ARTIFACT_ID = 'infobip-mobile-messaging-huawei-chat-sdk'
}
apply from: "${rootProject.projectDir}/publish-mavencentral.gradle"
apply from: "${rootProject.projectDir}/jacoco.gradle"