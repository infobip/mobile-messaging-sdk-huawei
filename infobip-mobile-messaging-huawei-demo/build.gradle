plugins {
    id 'com.android.application'
    id 'com.huawei.agconnect'
}

android {
    namespace = "org.infobip.mobile.messaging.demo"
    buildToolsVersion = mm_buildToolsVersion
    compileSdk = mm_compileSdkVersion

    defaultConfig {
        minSdkVersion mm_minSdkVersion
        targetSdkVersion mm_targetSdkVersion
        versionCode 1
        versionName version
        applicationId "org.infobip.mobile.messaging.hmsdemo"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        debug {
            keyAlias 'hmsdemo'
            keyPassword '123456'
            storeFile file('src/HmsDemo.jks')
            storePassword '123456'
        }
        release {
            storeFile file("${property(project, 'signingKeystore', 'KEYSTORE')}")
            storePassword "${property(project, 'signingKeystorePassword', 'KEYSTORE_PASSWORD')}"
            keyAlias "alias_name"
            keyPassword "${property(project, 'signingKeystorePassword', 'KEYSTORE_PASSWORD')}"
            keyPassword "${project.hasProperty('signingKeystorePassword') ? project['signingKeystorePassword'] : System.getenv('KEYSTORE_PASSWORD')}"
        }
    }

    buildTypes {
        configureEach {
            property(project, 'app_id', 'APP_ID')?.with { resValue "string", "app_id", delegate }
            property(project, 'infobip_application_code', 'INFOBIP_APPLICATION_CODE')?.with { resValue "string", "infobip_application_code", delegate }
            property(project, 'infobip_api_uri', 'INFOBIP_API_URI')?.with { resValue "string", "infobip_api_uri", delegate }
            property(project, 'infobip_inappchat_widget_uri', 'INFOBIP_INAPPCHAT_WIDGET_URI')?.with { resValue "string", "ib_inappchat_widget_uri", delegate }
        }

        release {
            minifyEnabled true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lint {
        abortOnError false
    }

    flavorDimensions = ["default"]

    productFlavors {
        push {
            dimension "default"
        }

        chat {
            dimension "default"
        }

        deeplink {
            dimension "default"
        }

        web {
            dimension "default"
        }

        customInApp {
            dimension "default"
        }

        cryptorMigration {
            dimension "default"
        }

        inbox {
            dimension "default"
        }
    }

    sourceSets {
        chat {
            java.srcDirs += "src/chatCommon/java"
            kotlin.srcDirs += ["src/chatCommon/java", "src/chatCommon/kotlin"]
            res.srcDirs += "src/chatCommon/res"
        }
    }
}

dependencies {
    implementation "androidx.constraintlayout:constraintlayout:$mm_constraintLayoutVersion"
    testImplementation "junit:junit:$mm_jUnitVersion"
    androidTestImplementation "androidx.test.ext:junit:$mm_androidXjUnitVersion"

    implementation project(':infobip-mobile-messaging-huawei-chat-sdk')
    implementation project(':infobip-mobile-messaging-huawei-sdk')
    implementation project(':infobip-mobile-messaging-huawei-inbox-sdk')

    implementation "com.infobip:infobip-mobile-messaging-api-java:${mm_androidSdkVersion}"
    implementation ("com.infobip:infobip-mobile-messaging-android-resources:${mm_androidSdkVersion}@aar")

    //To add JWT use build flavour "chat"
    chatImplementation 'com.nimbusds:nimbus-jose-jwt:9.0.1'

    // push kit
    implementation "com.huawei.hms:push:$mm_hmsPushVersion"

    implementation "androidx.appcompat:appcompat:$mm_appCompatVersion"
    implementation "com.google.android.material:material:$mm_materialVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.1.0'

    //To add cryptor use build flavour "cryptorMigration"
    cryptorMigrationImplementation project(":infobip-mobile-messaging-huawei-cryptor-migration")

    implementation 'com.android.support:multidex:2.0.1'
}

private static String property(Project project, String projectKey, String environmentKey) {
    return project.hasProperty(projectKey) ? project[projectKey] : System.getenv(environmentKey)
}
